using System;
using System.Linq;
using HospitalSystem.BUS;
using HospitalSystem.Models;

namespace HospitalSystem.Menus
{
    public static class PrescriptionsMenu
    {
        public static void Show(PrescriptionBUS bus)
        {
            while (true)
            {
                Console.WriteLine("\n=== Qu·∫£n L√Ω ƒê∆°n Thu·ªëc ===");
                Console.WriteLine("1. Th√™m ƒë∆°n thu·ªëc");
                Console.WriteLine("2. Xem danh s√°ch ƒë∆°n thu·ªëc");
                Console.WriteLine("3. C·∫≠p nh·∫≠t ƒë∆°n thu·ªëc");
                Console.WriteLine("4. X√≥a ƒë∆°n thu·ªëc");
                Console.WriteLine("5. Quay l·∫°i");
                Console.Write("Ch·ªçn: ");

                var choice = Console.ReadLine();
                switch (choice)
                {
                    case "1": Add(bus); break;
                    case "2": View(bus); break;
                    case "3": Update(bus); break;
                    case "4": Delete(bus); break;
                    case "5": return;
                    default: Console.WriteLine("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá."); break;
                }
            }
        }

        private static void Add(PrescriptionBUS bus)
        {
            int appointmentId;
            while (true)
            {
                Console.Write("ID cu·ªôc h·∫πn: ");
                if (int.TryParse(Console.ReadLine(), out appointmentId) && appointmentId > 0) break;
                Console.WriteLine("‚ùå ID cu·ªôc h·∫πn kh√¥ng h·ª£p l·ªá!");
            }

            string? medication = null;
            while (string.IsNullOrWhiteSpace(medication) || medication.Length < 3 || medication.Length > 100)
            {
                Console.Write("T√™n thu·ªëc: ");
                medication = Console.ReadLine()?.Trim();
                if (string.IsNullOrWhiteSpace(medication) || medication.Length < 3 || medication.Length > 100)
                    Console.WriteLine("‚ùå T√™n thu·ªëc ph·∫£i t·ª´ 3 ƒë·∫øn 100 k√Ω t·ª±!");
            }

            string? dosage = null;
            while (string.IsNullOrWhiteSpace(dosage) || dosage.Length < 3 || dosage.Length > 50)
            {
                Console.Write("Li·ªÅu l∆∞·ª£ng: ");
                dosage = Console.ReadLine()?.Trim();
                if (string.IsNullOrWhiteSpace(dosage) || dosage.Length < 3 || dosage.Length > 50)
                    Console.WriteLine("‚ùå Li·ªÅu l∆∞·ª£ng ph·∫£i t·ª´ 3 ƒë·∫øn 50 k√Ω t·ª±!");
            }

            string? details = null;
            while (details != null && details.Length > 255)
            {
                Console.Write("Chi ti·∫øt (nh·∫•n Enter ƒë·ªÉ b·ªè qua): ");
                details = Console.ReadLine()?.Trim();
                if (details != null && details.Length > 255)
                    Console.WriteLine("‚ùå Chi ti·∫øt kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 255 k√Ω t·ª±!");
            }

            var prescription = new Prescription
            {
                AppointmentId = appointmentId,
                Medication = medication,
                Dosage = dosage,
                Details = details ?? string.Empty // S·ª≠ d·ª•ng gi√° tr·ªã m·∫∑c ƒë·ªãnh n·∫øu null
            };

            try
            {
                bus.Add(prescription);
                Console.WriteLine("‚úÖ Th√™m ƒë∆°n thu·ªëc th√†nh c√¥ng!");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"‚ùå L·ªói: {ex.Message}");
            }
        }

        private static void View(PrescriptionBUS bus)
        {
            var list = bus.GetAll();
            if (list.Count == 0)
            {
                Console.WriteLine("üì≠ Kh√¥ng c√≥ ƒë∆°n thu·ªëc.");
                return;
            }

            foreach (var p in list)
                Console.WriteLine($"ID: {p.Id}, ID cu·ªôc h·∫πn: {p.AppointmentId}, Thu·ªëc: {p.Medication}, Li·ªÅu l∆∞·ª£ng: {p.Dosage}, Chi ti·∫øt: {p.Details}");
        }

        private static void Update(PrescriptionBUS bus)
        {
            int id;
            while (true)
            {
                Console.Write("ID c·∫ßn c·∫≠p nh·∫≠t: ");
                if (int.TryParse(Console.ReadLine(), out id) && id > 0) break;
                Console.WriteLine("‚ùå ID kh√¥ng h·ª£p l·ªá.");
            }

            int appointmentId;
            while (true)
            {
                Console.Write("ID cu·ªôc h·∫πn m·ªõi: ");
                if (int.TryParse(Console.ReadLine(), out appointmentId) && appointmentId > 0) break;
                Console.WriteLine("‚ùå ID cu·ªôc h·∫πn kh√¥ng h·ª£p l·ªá!");
            }

            string? medication = null;
            while (string.IsNullOrWhiteSpace(medication) || medication.Length < 3 || medication.Length > 100)
            {
                Console.Write("T√™n thu·ªëc m·ªõi: ");
                medication = Console.ReadLine()?.Trim();
                if (string.IsNullOrWhiteSpace(medication) || medication.Length < 3 || medication.Length > 100)
                    Console.WriteLine("‚ùå T√™n thu·ªëc ph·∫£i t·ª´ 3 ƒë·∫øn 100 k√Ω t·ª±!");
            }

            string? dosage = null;
            while (string.IsNullOrWhiteSpace(dosage) || dosage.Length < 3 || dosage.Length > 50)
            {
                Console.Write("Li·ªÅu l∆∞·ª£ng m·ªõi: ");
                dosage = Console.ReadLine()?.Trim();
                if (string.IsNullOrWhiteSpace(dosage) || dosage.Length < 3 || dosage.Length > 50)
                    Console.WriteLine("‚ùå Li·ªÅu l∆∞·ª£ng ph·∫£i t·ª´ 3 ƒë·∫øn 50 k√Ω t·ª±!");
            }

            string? details = null;
            while (details != null && details.Length > 255)
            {
                Console.Write("Chi ti·∫øt m·ªõi (nh·∫•n Enter ƒë·ªÉ b·ªè qua): ");
                details = Console.ReadLine()?.Trim();
                if (details != null && details.Length > 255)
                    Console.WriteLine("‚ùå Chi ti·∫øt kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 255 k√Ω t·ª±!");
            }

            var prescription = new Prescription
            {
                Id = id,
                AppointmentId = appointmentId,
                Medication = medication,
                Dosage = dosage,
                Details = details ?? string.Empty // S·ª≠ d·ª•ng gi√° tr·ªã m·∫∑c ƒë·ªãnh n·∫øu null
            };

            try
            {
                bus.Update(prescription);
                Console.WriteLine("‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng!");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"‚ùå L·ªói: {ex.Message}");
            }
        }

        private static void Delete(PrescriptionBUS bus)
        {
            int id;
            while (true)
            {
                Console.Write("ID c·∫ßn x√≥a: ");
                if (int.TryParse(Console.ReadLine(), out id) && id > 0) break;
                Console.WriteLine("‚ùå ID kh√¥ng h·ª£p l·ªá.");
            }

            try
            {
                bus.Delete(id);
                Console.WriteLine("‚úÖ ƒê√£ x√≥a ƒë∆°n thu·ªëc!");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"‚ùå L·ªói: {ex.Message}");
            }
        }
    }
}